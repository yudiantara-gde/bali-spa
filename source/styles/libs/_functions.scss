///
///	Free Loe Span Landing Page
///	https://yudiantara-gde.github.io/leo-spa/
///	Free for personal and commercial use under the CCA 3.0 license
///

/* All Function */

/// Gets a value from a map.
/// @author Hugo Giraudel
/// @param {map} $map Map.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function val($map, $keys...) {

	@if nth($keys, 1) == null {
		$keys: remove-nth($keys, 1);
	}

	@each $key in $keys {
		$map: map-get($map, $key);
	}

	@return $map;

}

/// Gets a duration value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _duration($keys...) {
	@return val($duration, $keys...);
}

/// Gets a font value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _font($keys...) {
	@return val($font, $keys...);
}

/// Gets a misc value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _misc($keys...) {
	@return val($misc, $keys...);
}

/// Gets a palette value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _palette($keys...) {
	@return val($palette, $keys...);
}

/// Gets a size value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _size($keys...) {
	@return val($size, $keys...);
}

/// Gets a color value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _color($keys...) {
	@return val($color, $keys...);
}

/// convert px to em
/// default value 16px = 1em
/// using em for layouts like menu
@function em($pixels, $context: _size(pxem)) {
	@return ($pixels/$context) * 1em
}

/// convert px to rem
/// default value 16px = 1rem
/// using rem in spacing (margin, padding, etc.) and font sizing
@function rem($pixels, $context: _size(pxrem)) {
	@return ($pixels/$context) * 1rem
}